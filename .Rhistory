library(swilr)
library(swirl)
swirl9
swirl()
library(swirl)
swirl()
c(0.5, 55, -10, 6)
num_vect <- (0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
ft <- num_vect < 1
num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
past(my_char, collapse = " ")
paste(my_char, collapse = " ")
c(my_char, "Katie")
my_name <- c(my_char, "Katie")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1, 2, 3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y<- rnorm(1000)
z<- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y < - x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(3, 5, 7)
c(4, 6, 7)
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix()
?matrix
matrix(1:20, nrow = 4, ncol = 5)
matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
idential(my_matrix, my_matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 1:10
if(x > 5) {
x <- 0
}
cube <- function(x, n) {
x^3
}
cube(3)
library(datasets)
data("iris")
?iris
s <- split(iris, iris$Sepal.Length)
class(s)
lapply(s, mean)
s
s <- split(iris, iris$Species)
s
s <- s[ , "virginica"]
s
lapply(s, function(x) colMeans(x["Sepal.Length"]))
colMeans(iris)
apply(iris[ , 1:4], 2, mean)
apply(iris, 1, mean)
library(datasets)
data(mtcars)
mtcars
split(mtcars, cyl)
split(mtcars, mtcars$cyl)
s <- split(mtcars, mtcars$cyl)
lapply(s, function(x) colMeans(x[c("mpg")]))
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(s, function(x) colMeans(x[c("hp")]))
82.63636 - 209.2143
debug(ls)
ls
clc
q
q
q
q
q
q
q
q
q
q
q
q
hi
git clone https://github.com/katbisho/ProgrammingAssignment2.git
git clone(https://github.com/katbisho/ProgrammingAssignment2.git)
set.seed(1)
rpois(5, 2)
s <- rpois(5, 2)
class(s)
rpois(5, 2)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
seed(1)
set.seed(1)
rpois(5, 2)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
abline(v = 15)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline( v = 12, lwd = 2)
abline( v = meadian(ppm), col = "magenta", lwd = 4)
abline( v = median(ppm), col = "magenta", lwd = 4)
name(pollution)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4, 4, 2, 1))
east <- subset(pollution, region == east)
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot)
with(pollution, plot(lattitude, pm25))
with(pollution, plot(latitude, pm25))
abline( h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, pollution$pm25, col = polution$region)
plot(pollution$latitude, pollution$pm25, col = pollution$region)
plot(pollution$latitude, pm25, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline( v = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
install.packages("RMySQL")
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
file <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
getwd()
setwd(~/Documents/datasciencecoursera)
setwd("~/Documents/datasciencecoursera")
file <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "American_com_survey.csv")
acs <- read.csv("American_com_survey.csv")
library(sqldf)
install.packages("sqldf")
library(sqldf)
names(acs)
?unique()
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
library(XML)
file <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
?nchar
nchar(file[10, ])
class(file)
file <- as.data.frame(file)
?xpathSApply
library(httr)
html2 = GET("http://biostat.jhsph.edu/~jleek/contact.html")
content2 = content(html2, as = "data.frame")
content2 = content(html2, as = "text")
parsedhtml = htmlParse
parsedhtml = htmlParse(content2, asText = TRUE)
class(parsedhtml)
file <- readHTMLTable(file)
class(file)
file <- as.data.frame(file)
class(file)
file
file <- readHTMLTable(parsedhtml, as.data.frame = TRUE)
class(file)
file
file
list(file)
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), airquality, layout = c(5, 1))
xyplot(Ozone ~ Wind | Month, airquality, layout = c(5, 1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x | f, layout = c(2, 1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), loacl = TRUE)
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(sqe(0, 1, len = 6))
pal(seq(0, 1, len = 6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x, y, pch = 19, col = rgb(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
