library(swilr)
library(swirl)
swirl9
swirl()
library(swirl)
swirl()
c(0.5, 55, -10, 6)
num_vect <- (0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
ft <- num_vect < 1
num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
past(my_char, collapse = " ")
paste(my_char, collapse = " ")
c(my_char, "Katie")
my_name <- c(my_char, "Katie")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1, 2, 3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y<- rnorm(1000)
z<- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y < - x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(3, 5, 7)
c(4, 6, 7)
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix()
?matrix
matrix(1:20, nrow = 4, ncol = 5)
matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
idential(my_matrix, my_matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 1:10
if(x > 5) {
x <- 0
}
cube <- function(x, n) {
x^3
}
cube(3)
library(datasets)
data("iris")
?iris
s <- split(iris, iris$Sepal.Length)
class(s)
lapply(s, mean)
s
s <- split(iris, iris$Species)
s
s <- s[ , "virginica"]
s
lapply(s, function(x) colMeans(x["Sepal.Length"]))
colMeans(iris)
apply(iris[ , 1:4], 2, mean)
apply(iris, 1, mean)
library(datasets)
data(mtcars)
mtcars
split(mtcars, cyl)
split(mtcars, mtcars$cyl)
s <- split(mtcars, mtcars$cyl)
lapply(s, function(x) colMeans(x[c("mpg")]))
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(s, function(x) colMeans(x[c("hp")]))
82.63636 - 209.2143
debug(ls)
ls
clc
q
q
q
q
q
q
q
q
q
q
q
q
hi
git clone https://github.com/katbisho/ProgrammingAssignment2.git
git clone(https://github.com/katbisho/ProgrammingAssignment2.git)
set.seed(1)
rpois(5, 2)
s <- rpois(5, 2)
class(s)
rpois(5, 2)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
seed(1)
set.seed(1)
rpois(5, 2)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
abline(v = 15)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline( v = 12, lwd = 2)
abline( v = meadian(ppm), col = "magenta", lwd = 4)
abline( v = median(ppm), col = "magenta", lwd = 4)
name(pollution)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4, 4, 2, 1))
east <- subset(pollution, region == east)
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot)
with(pollution, plot(lattitude, pm25))
with(pollution, plot(latitude, pm25))
abline( h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, pollution$pm25, col = polution$region)
plot(pollution$latitude, pollution$pm25, col = pollution$region)
plot(pollution$latitude, pm25, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline( v = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
install.packages("RMySQL")
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(hwy, mpg, color = drv)
qplot(hwy, data = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv ~.)
qplot(hwy, data = mpg, facets = drv ~., binwidth = 2)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.lmline
?splom
qplot(votes, rating, data = movies)
library(datasets)
qplot(votes, rating, data = movies)
library(ggplot2)
qplot(votes, rating, data = movies)
library(swirl)
swirl()
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv, method= "loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
skip()
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
skip()
exit()
0
skip()
swirl()
str(diamond)
str(diamonds)
qplot(price, data = diamonds)
qplot(price, data = diamonds, range = diamonds$price)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cute)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"))
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
skip()
library(ggplot2)
# save files as data frames so that the data can be accessed
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#subset data to only include motor vehicles from LA and Baltimore City (year, fip, and sum emissions)
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#plot
ggplot(data = Data, mapping = aes(year, V1, color = fips)) + geom_point() + geom_line()
setwd("~/Documents/datasciencecoursera/exploratory.proj2")
library(ggplot2)
# save files as data frames so that the data can be accessed
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#subset data to only include motor vehicles from LA and Baltimore City (year, fip, and sum emissions)
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#plot
ggplot(data = Data, mapping = aes(year, V1, color = fips)) + geom_point() + geom_line()
library(plyr)
library(ggplot2)
# save files as data frames so that the data can be accessed
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#subset data to only include motor vehicles from LA and Baltimore City (year, fip, and sum emissions)
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#plot
ggplot(data = Data, mapping = aes(year, V1, color = fips)) + geom_point() + geom_line()
MV <- subset(NEI, (fips == "24510" | fips == "06037") & type=="ON-ROAD")
# Use more meaningful variable names
MV <- transform(MV, region = ifelse(fips == "24510", "Baltimore City",
"Los Angeles County"))
MVPM25ByYearAndRegion <- ddply(MV, .(year, region), function(x)
sum(x$Emissions))
colnames(MVPM25ByYearAndRegion)[3] <- "Emissions"
# Create a plot normalized to 1999 levels to better show change over time
Balt1999Emissions <- subset(MVPM25ByYearAndRegion, year == 1999 &
region == "Baltimore City")$Emissions
LAC1999Emissions <- subset(MVPM25ByYearAndRegion, year == 1999 &
region == "Los Angeles County")$Emissions
MVPM25ByYearAndRegionNorm <- transform(MVPM25ByYearAndRegion,
EmissionsNorm = ifelse(region ==
"Baltimore City",
Emissions / Balt1999Emissions,
Emissions / LAC1999Emissions))
qplot(year, EmissionsNorm, data=MVPM25ByYearAndRegionNorm, geom="line",
color=region) + ggtitle(expression("Total" ~ PM[2.5] ~
"Motor Vehicle Emissions Normalized to 1999 Levels")) + xlab("Year") +
ylab(expression("Normalized" ~ PM[2.5] ~ "Emissions"))
#subset data to only include motor vehicles from LA and Baltimore City (year, fip, and sum emissions)
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#plot
ggplot(data = Data, mapping = aes(year, log(V1), color = fips)) + geom_point() + geom_line()
data
data
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
Data
sum(motor$Emissions, na.rm = TRUE)
?transforms
?transform
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
1999_baltimore <- Data[1999, fips == "24510"]
baltimore <- Data[1999, fips == "24510"]
baltimore <- Data[1999, ]
baltimore
baltimore <- Data[fips == "24510", year = "1999"]
baltimore <- Data[fips == "24510", ]
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
baltimore <- subset(Data, (year = "1999") & (fips == "24510")
)
baltimore <- subset(Data, (year = "1999") & (fips == "24510"))
baltimore <- subset(Data, (year == "1999") & (fips == "24510"))
baltimore
transform(Data, V1 <- ifelse(fips == "24510", V1/baltimore, V1/la))
la <- subset(Data, (year == "1999") & (fips == "06037"))
transform(Data, V1 <- ifelse(fips == "24510", V1/baltimore, V1/la))
transform(Data, V1 = ifelse(fips == "24510", V1/baltimore, V1/la))
Data1 <- ddply(Data, "fips", transform, V1/Mean(V1))
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#baltimore <- subset(Data, (year == "1999") & (fips == "24510"))
#la <- subset(Data, (year == "1999") & (fips == "06037"))
#plot
ggplot(data = Data, mapping = aes(year, color = fips)) + geom_point() + geom_line()
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#baltimore <- subset(Data, (year == "1999") & (fips == "24510"))
#la <- subset(Data, (year == "1999") & (fips == "06037"))
#plot
ggplot(data = Data, mapping = aes(year, color = fips)) + geom_point() + geom_line()
#subset data to only include motor vehicles from LA and Baltimore City (year, fip, and sum emissions)
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#baltimore <- subset(Data, (year == "1999") & (fips == "24510"))
#la <- subset(Data, (year == "1999") & (fips == "06037"))
#plot
ggplot(data = Data, mapping = aes(year, V1, color = fips)) + geom_point() + geom_line()
ggplot(data = Data, mapping = aes(year, log(V1), color = fips)) + geom_point() + geom_line()
# open png file for saving the plot
png("plot6.png", width=480, height=480)
#subset data to only include motor vehicles from LA and Baltimore City (year, fip, and sum emissions)
motor <- subset(NEI, ((fips == "24510") | (fips == "06037")) & (type == "ON-ROAD"))
Data <- ddply(motor, c("year", "fips"), function(df)sum(df$Emissions, na.rm=TRUE))
#baltimore <- subset(Data, (year == "1999") & (fips == "24510"))
#la <- subset(Data, (year == "1999") & (fips == "06037"))
#plot
ggplot(data = Data, mapping = aes(year, log(V1), color = fips)) + geom_point() + geom_line()
#exit graphics device in order to save graph into file Plot2.R
dev.off()
# open png file for saving the plot
png("plot4.png", width=480, height=480)
coalSources <- SCC[grep("^Coal ", SCC$Short.Name, ignore.case=F),"SCC"]
Data <- ddply(NEI[NEI$SCC %in% coalSources,], c("year"), function(df)sum(df$Emissions, na.rm=TRUE))
ggplot(Data, aes(x=year,y=V1)) + geom_line() + geom_point() + xlab('Year')+ ylab('Total Emissions')+ ggtitle('Total Emissions Coal Combustion-related sources')
#exit graphics device in order to save graph into file Plot2.R
dev.off()
